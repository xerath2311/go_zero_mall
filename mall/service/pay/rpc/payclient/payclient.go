// Code generated by goctl. DO NOT EDIT!
// Source: pay.proto

package payclient

import (
	"context"

	"mall/service/pay/rpc/pay"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CallbackRequest  = pay.CallbackRequest
	CallbackResponse = pay.CallbackResponse
	CreateRequest    = pay.CreateRequest
	CreateResponse   = pay.CreateResponse
	DetailRequest    = pay.DetailRequest
	DetailResponse   = pay.DetailResponse

	Payclient interface {
		Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
		Detail(ctx context.Context, in *DetailRequest, opts ...grpc.CallOption) (*DetailResponse, error)
		Callback(ctx context.Context, in *CallbackRequest, opts ...grpc.CallOption) (*CallbackResponse, error)
	}

	defaultPayclient struct {
		cli zrpc.Client
	}
)

func NewPayclient(cli zrpc.Client) Payclient {
	return &defaultPayclient{
		cli: cli,
	}
}

func (m *defaultPayclient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	client := pay.NewPayclientClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}

func (m *defaultPayclient) Detail(ctx context.Context, in *DetailRequest, opts ...grpc.CallOption) (*DetailResponse, error) {
	client := pay.NewPayclientClient(m.cli.Conn())
	return client.Detail(ctx, in, opts...)
}

func (m *defaultPayclient) Callback(ctx context.Context, in *CallbackRequest, opts ...grpc.CallOption) (*CallbackResponse, error) {
	client := pay.NewPayclientClient(m.cli.Conn())
	return client.Callback(ctx, in, opts...)
}
