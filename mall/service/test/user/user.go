// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package user

import (
	"context"

	"mall/service/test/remote"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = remote.Request
	Response = remote.Response

	User interface {
		//  登录
		Login(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

//  登录
func (m *defaultUser) Login(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := remote.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
